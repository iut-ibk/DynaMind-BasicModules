CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(dynamind-basicmodules)
IF(NOT APPLE)
	set(CMAKE_MODULE_PATH
	"${dynamind-basicmodules_SOURCE_DIR}/cmake"
	"${dynamind-basicmodules_SOURCE_DIR}/cmake/Utils"
	"${dynamind-basicmodules_SOURCE_DIR}/cmake/Packages"
)
ENDIF()

FIND_PATH(DYNAMINDDEV DynaMindDevCmake.txt
	PATHS   $ENV{DYNAMIND_DIR}/include
	PATH_SUFFIXES dynamindcore/CMake)

IF(DYNAMIND_INCLUDE_DIR)
	MESSAGE(STATUS "Compiled from toolbox")
	MESSAGE(STATUS "DYNAMIND_INCLUDE_DIR ${DYNAMIND_INCLUDE_DIR}")
	SET (DYNAMIND_CORE_LIBRARY dynamindcore)
	SET (DYNAMIND_TOOLBOX_LIBRARY dynamindtoolbox)
	SET (DYNAMIND_EXTENSIONS_LIBRARY dynamind-extensions)
	MESSAGE(STATUS "${DYNAMIND_CORE_LIBRARY}")
ELSE()
	MESSAGE(STATUS "Compiled from stand alone")
	FIND_PATH(DYNAMINDDEV DynaMindDevCmake.txt
	PATHS $ENV{DYNAMIND_DIR}/include
	PATH_SUFFIXES dynamindcore/CMake)

	IF(DYNAMINDDEV)
		INCLUDE(${DYNAMINDDEV}/DynaMindDevCmake.txt)
	ELSE()
		MESSAGE(FATAL_ERROR "Could not find dynamind. Maybe not installed ?")
	ENDIF()

ENDIF()

IF(NOT WITH_QT5)
    FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGui REQUIRED)
    INCLUDE(${QT_USE_FILE})
ELSE()
    FIND_PACKAGE(Qt5 COMPONENTS Core Widgets GUI)
ENDIF()



FIND_PACKAGE(GDAL)
INCLUDE_DIRECTORIES(${GDAL_INCLUDE_DIR})

find_package(OpenMP)
if(OPENMP_FOUND)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
	message(STATUS "OpenMP is enabled")
else()
	add_definitions(-DOPENMP_DISABLED)
	message(STATUS "OpenMP is disabled. Consider using a compiler that supports OpenMP")
endif()


INCLUDE_DIRECTORIES( ${DYNAMIND_INCLUDE_DIR})

IF(CMAKE_BUILD_TYPE STREQUAL Debug)
	MESSAGE(STATUS "Build Type = Debug")
	ADD_DEFINITIONS(-DDEBUG)
ELSE()
	MESSAGE(STATUS "Build Type = Release")
ENDIF()
IF(DYNAMIND_TOOLBOX_BUILD_DIR)
	SET(LIBRARY_OUTPUT_PATH ${DYNAMIND_TOOLBOX_BUILD_DIR}/Modules)
	SET(EXECUTABLE_OUTPUT_PATH ${DYNAMIND_TOOLBOX_BUILD_DIR}/Modules)
	SET(SCRIPT_PATH ${DYNAMIND_TOOLBOX_BUILD_DIR}/PythonModules )
ELSE()
	SET(LIBRARY_OUTPUT_PATH ${dynamind-basicmodules_BINARY_DIR})
	SET(EXECUTABLE_OUTPUT_PATH ${dynamind-basicmodules_BINARY_DIR})
	SET(SCRIPT_PATH ${dynamind-basicmodules_BINARY_DIR}/PythonModules )
ENDIF()

ADD_SUBDIRECTORY(scripts)
ADD_SUBDIRECTORY(doc)
ADD_SUBDIRECTORY(src/DynaMind-BasicModules)

if(WITH_UNIT_TESTS)
	ADD_SUBDIRECTORY(unit-tests)
endif(WITH_UNIT_TESTS)
